name: Bump, Release, and Publish

on:
  workflow_dispatch:
    branches:
      - main
    inputs:
      newversion:
        description: "Bump Type (major minor patch)"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

concurrency:
  group: tag-and-release
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Bump Version
        run: poetry version ${{ github.event.inputs.newversion }}
      - name: Get New Version
        id: get-new-version
        run: |
          echo "version=$(poetry version -s)" >> $GITHUB_OUTPUT
      - name: Install dependencies
        run: poetry install --with dev --no-interaction --no-root
      - name: Install project
        run: poetry install --with dev --no-interaction
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests/
      - name: Poetry Publish to PyPi Test
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry config pypi-token.test-pypi ${{ secrets.TEST_PYPI_API_TOKEN }}
          poetry publish --build --repository test-pypi
      - name: Poetry Publish to PyPi
        run: |
          poetry publish --build
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
      - name: Tag version ${{ steps.get-new-version.version }}
        id: tag-version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          custom_tag: ${{ steps.get-new-version.version }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag-version.outputs.new_tag }}
          name: ${{ steps.tag-version.outputs.new_tag }}
          body: ${{ steps.tag-version.outputs.changelog }}
